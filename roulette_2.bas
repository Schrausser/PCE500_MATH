1:  REM ********************************************
2:  REM           Roulette Simulation 2 
3:  REM       von Dietmar Schrausser (c)2014
4:  REM ********************************************

5: CLS: PRINT „Roulette Simulation:“
10: CLEAR: DIM P(36)
20: FOR I=0 TO 36:P(I)=1:NEXT
30: NN=1: V0=1:SW=-1:SWP=1:Z1=-1
40: PC=0.95:INPUT „p[crit](0.95)->“;PC
50: V=100: INPUT „Vorlauf n(100)->“;V
60: E=1000:E1=0: INPUT „Kapital e(1000)->“;E
70: CLS: GOTO 190
80: CLS
90: LOCATE 0,3: PRINT PC: WAIT 0: 
LOCATE 0,3: PRINT „p“: 
LOCATE 36,3: Z=RND(37)-1:PRINT Z:
LOCATE 36,3: PRINT „z“:
LOCATE 6,3: PRINT NN:
LOCATE 6,3: PRINT“n“: NN=NN+1
100: IF V0>=V AND SW=1 THEN GOSUB 600
110: IF V0>=V THEN 
LOCATE 12,3: PRINT E: 
LOCATE 12,3: PRINT “e“:
IF E<0 THEN GOSUB 800
120: IF V0<V THEN 
LOCATE 12,3: PRINT „Vorlauf n=2“; V
130: IF V0>=V AND SW=1 THEN
LOCATE 32,3: PRINT Z1:
LOCATE 32,3: PRINT „.“
140: FOR I=0 TO 36:
IF Z<>I THEN P(I)=P(I)*(1-(1/37))
150: NEXT I
160: P(Z)=1-(1/37)
170: IF V0>=V AND SW=1 THEN 
LOCATE 24,3: PRINT INT ((1-P(Z1))*1000)/1000: 
LOCATE 24,3: PRINT „p“
180: IF V0<V THEN GOTO 380
190: N=1 
200: FOR J=0 TO 2
210: FOR I=2 TO 37 STEP 3
220: IF SWP=1 AND 1-P(N)>=PC THEN 
LOCATE I,J: PRINT N:
IF 1-P(N)>=0.995 THEN LOCATE I+3,J:PRINT „*“: BEEP1,1,1:
IF 1-P(N)>=0.999 THEN LOCATE I+3,J:PRINT „!“:
230: IF SWP=-1 THEN 
LOCATE I,J:PRINT INT((1-P(N))*100)  
240: IF V0=1 THEN 
LOCATE I,J: PRINT N
250: N=N+3
260: IF INKEY$=“P“ THEN SWP=SWP*-1
270: IF INKEY$=“ “ THEN GOSUB 700
280: IF INKEY$=“Q“ THEN GOSUB 400
290: IF INKEY$=“S“ THEN GOSUB 500
300: NEXT I: N=N-35: NEXT J: LOCATE 0,1
310: IF SWP=1 THEN
WAIT 30: 
IF 1-P(0)>=PC THEN PRINT „0“ ELSE PRINT „ „
320: IF SWP=-1 THEN
WAIT 30: 
PRINT INT ((1-P(0))*100)
330: IF 1-P(0)>=0.995 THEN 
LOCATE 2,1: PRINT „*“: BEEP 1,1,1
340: IF 1-P(0)>=0.999 THEN 
LOCATE 2,1: PRINT „!“
350: IF V0=1 THEN 
LOCATE 0,1: 
PRINT „0“: GOTO 90
360: PRINT:     GOTO 80
380: V0=V0+1:   GOTO 90 

400: SW=SW*-1: RETURN

500: CLS: SW=1:
INPUT „Zahl->“;Z1:E1=1:
INPUT „Einsatz e(1)->“;E1: CLS: RETURN

600: IF Z=Z1 THEN
E=E+36*E1: BEEP 1,1: SW=-1
610: IF Z<>Z1 THEN E=E-E1
620: RETURN

700: CLS: INPUT „p[crit]->“;PC:RETURN

800: CLS: PRINT „Kapital e<0“: END






